<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0"
  xmlns:mei="http://www.music-encoding.org/ns/mei" xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>TEI with maximal setup</title>
        <author>Sebastian Rahtz</author>
      </titleStmt>
      <publicationStmt>
        <publisher>TEI Consortium</publisher>
        <availability status="free">
          <p>TEI material can be licensed differently depending on the
          use you intend to make of it. Hence it is made available
          under both the CC+BY and BSD-2 licences. The CC+BY licence
          is generally appropriate for usages which treat TEI content
          as data or documentation. The BSD-2 licence is generally
          appropriate for usage of TEI content in a software
          environment. For further information or clarification,
          please contact the TEI Consortium (info@tei-c.org).</p>
        </availability>
      </publicationStmt>
      <sourceDesc>
        <p>Written from scratch.</p>
      </sourceDesc>
    </fileDesc>
  </teiHeader>
  <text>
    <body>
      <head>TEI Complete</head>
      <p>This TEI customization describes a schema that includes
      <emph>all</emph> of the TEI P5 modules. This is a very useful
      starting place for manually creating your own customizations â€”
      it is much easier to delete the modules you do not want than to
      add the modules you do. Furthermore this customization often
      proves helpful for testing TEI software.</p>
      <p>However, this particular TEI customization is <emph>not
      recommended</emph> for actual use for encoding documents. It
      produces schemas and reference documentation that will be much
      larger and include many more elements than almost anyone could
      conceivably ever need. Tempting though it may be simply to have
      absolutely everything, and <q>just ignore</q> elements not
      required, experience has shown that their presence makes the
      documentation harder to read and use, and makes a schema that is
      far more lax than desired.</p>
      <p>The <att>n</att> attribute of each <gi>moduleRef</gi> below
      reflects the chapter number of the TEI <title>Guidelines</title>
      in which the module being referenced is defined. Note that the
      modules are generally referred to in the order defined, with the
      exception that the module for <title level="a">Simple Analytic
      Mechanisms</title> is referred to before the module for <title level="a">Dictionaries</title>. This is because the class <name type="class">att.lexicographic.normalized</name> (which is
      defined in <name type="module">analysis</name>) needs to be
      specified before the class <name type="class">att.lexicographic</name> (which is defined in <name type="module">dictionaries</name>).</p>
      <p>The first four modules are often
      called the <soCalled>required</soCalled> modules. However, these
      modules are not themselves technically required to create a TEI
      conformant markup language (let alone a useful non-TEI
      conformant markup language). Rather, they each contain one or
      more <emph>elements</emph> which are required for TEI
      conformance.</p>
      <schemaSpec ident="tei_all" start="TEI teiCorpus" prefix="tei_" targetLang="en" docLang="en">
        <moduleRef n="01" key="tei"/>
        <moduleRef n="02" key="header"/>
        <moduleRef n="03" key="core"/>
        <moduleRef n="04" key="textstructure"/>
        <moduleRef n="07" key="drama"/>
        <moduleRef n="17" key="analysis"/>
        <moduleRef n="13" key="namesdates"/>
        <moduleRef n="14" key="figures"/>
        <moduleRef n="15" key="corpus"/>
        <moduleRef n="16" key="linking"/>
        <moduleRef n="22" key="tagdocs"/>
        
        
        
        <elementSpec xmlns="http://www.tei-c.org/ns/1.0" module="figures" ident="notatedMusic" mode="change">
          <equiv/>
          <desc>encodes the presence of music notation in a text. Some MEI elements are allowed within.</desc>
          <classes>
            <memberOf key="model.global"/>
            <memberOf key="att.global"/>
            <memberOf key="att.placement"/>
            <memberOf key="att.typed"/>
          </classes>
          <content>
            <zeroOrMore xmlns="http://relaxng.org/ns/structure/1.0">
              <choice>
                <ref name="model.labelLike"/>
                <ref name="model.ptrLike"/>
                <ref name="graphic"/>
                <ref name="binaryObject"/>
              </choice>
            </zeroOrMore>
            <rng:optional>
              <rng:choice>
                <rng:ref name="mei_mei"/>
                <rng:ref name="mei_music"/>
                <rng:ref name="mei_mdiv"/>
                <rng:ref name="mei_layer"/>
              </rng:choice>
            </rng:optional>
          </content>
          <exemplum xml:lang="en">
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <notatedMusic>
                <ptr target="bar1.xml"/>
                <graphic url="bar1.jpg"/>
                <desc>First bar of Chopin's Scherzo No.3 Op.39</desc>
              </notatedMusic>
            </egXML>
          </exemplum>
          <remarks> <p>It is possible to describe
            the content of the notation using elements from the model.labelLike class and it is possible
            to point to an external representation using elements from model.ptrLike. It is possible to
            specify the location of digital objects representing the notated music in other media such
            as images or audio-visual files. The encoder's interpretation of the correspondence between
            the notated music and these digital objects is not encoded explicitly. We recommend the use
            of graphic and binaryObject mainly as a fallback mechanism when the notated music format is
            not displayable by the application using the encoding. The alignment of encoded notated
            music, images carrying the notation, and audio files is a complex matter for which we refer
            the encoder to other formats and specifications such as MPEG-SMR.</p>
            <p>In this TEI with Music Notation customisation, some
              elements from MEI are allowed to occur within the element to
              encode the music notation.</p></remarks>
          
        </elementSpec>
        
        <!-- ==== MEI Modules ==== -->
        <!-- NB. @source *MUST* point to MEI's ODD source-->
        <moduleRef key="MEI" source="mei-source.xml"/>
        <moduleRef key="MEI.analytical" source="mei-source.xml"/>
        <moduleRef key="MEI.cmn" source="mei-source.xml"/>
        <moduleRef key="MEI.cmnOrnaments" source="mei-source.xml"/>
        <moduleRef key="MEI.corpus" source="mei-source.xml"/>
        <moduleRef key="MEI.critapp" source="mei-source.xml"/>
        <moduleRef key="MEI.drama" source="mei-source.xml"/>
        <moduleRef key="MEI.edittrans" source="mei-source.xml"/>
        <moduleRef key="MEI.externalsymbols" source="mei-source.xml"/>
        <moduleRef key="MEI.facsimile" source="mei-source.xml"/>
        <moduleRef key="MEI.figtable" source="mei-source.xml"/>
        <moduleRef key="MEI.fingering" source="mei-source.xml"/>
        <moduleRef key="MEI.frbr" source="mei-source.xml"/>
        <moduleRef key="MEI.genetic" source="mei-source.xml"/>
        <moduleRef key="MEI.gestural" source="mei-source.xml"/>
        <moduleRef key="MEI.harmony" source="mei-source.xml"/>
        <moduleRef key="MEI.header" source="mei-source.xml"/>
        <moduleRef key="MEI.lyrics" source="mei-source.xml"/>
        <!--<moduleRef key="MEI.mensural" source="mei-source.xml"/>-->
        <moduleRef key="MEI.midi" source="mei-source.xml"/>
        <moduleRef key="MEI.msdDesc" source="mei-source.xml"/>
        <moduleRef key="MEI.namesdates" source="mei-source.xml"/>
        <!--<moduleRef key="MEI.neumes" source="mei-source.xml"/>-->
        <moduleRef key="MEI.performance" source="mei-source.xml"/>
        <moduleRef key="MEI.ptrref" source="mei-source.xml"/>
        <moduleRef key="MEI.shared" source="mei-source.xml"/>
        <moduleRef key="MEI.stringtab" source="mei-source.xml"/>
        <moduleRef key="MEI.text" source="mei-source.xml"/>
        <moduleRef key="MEI.usersymbols" source="mei-source.xml"/>
        <moduleRef key="MEI.visual" source="mei-source.xml"/>
        
        <!-- == Changes to MEI components == -->
        
        <!-- Declare MEI and XLink namespaces for use in Schematron -->
        <constraintSpec ident="set_ns" scheme="schematron" mode="add">
          <constraint>
            <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="mei"
              uri="http://www.music-encoding.org/ns/mei"/>
            <sch:ns xmlns:sch="http://purl.oclc.org/dsdl/schematron" prefix="xlink"
              uri="http://www.w3.org/1999/xlink"/>
          </constraint>
        </constraintSpec>
        
        <!-- Add TEI and TEI-ex namespace to macro.anyXML -->
        <macroSpec ident="mei_macro.anyXML" module="MEI.shared" type="pe" mode="change">
          <content>
            <rng:element>
              <rng:anyName>
                <rng:except>
                  <rng:nsName ns="http://www.music-encoding.org/ns/mei"/>
                  <rng:nsName ns="http://www.w3.org/2000/svg"/>
                  <rng:nsName ns="http://www.tei-c.org/ns/1.0"/>
                  <rng:name ns="http://www.tei-c.org/ns/Examples">egXML</rng:name>
                </rng:except>
              </rng:anyName>
              <rng:zeroOrMore>
                <rng:attribute>
                  <rng:anyName/>
                </rng:attribute>
              </rng:zeroOrMore>
              <rng:zeroOrMore>
                <rng:choice>
                  <rng:text/>
                  <rng:ref name="mei_macro.anyXML"/>
                </rng:choice>
              </rng:zeroOrMore>
            </rng:element>
          </content>
        </macroSpec>
        
        <!-- Make @source mandatory when applicable. -->
        
        <classSpec type="atts" module="MEI.shared" ident="mei_att.staffident" mode="replace">
          <desc>signifies the staff on which a notated event occurs or to
            which a control event applies.</desc>
          <attList>
            <attDef ident="staff" usage="mwa"/>
          </attList>
          <remarks><p>The attribute is made mandatory when applicable instead of always mandatory to allow MEI fragments.</p></remarks>
        </classSpec>
        
        
      </schemaSpec>
    </body>
  </text>
</TEI>